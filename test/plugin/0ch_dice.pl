#============================================================================================================
#
#	拡張機能 - ダイス
#	0ch_dice.pl
#
#============================================================================================================
package ZPL_dice;



#------------------------------------------------------------------------------------------------------------
#	拡張機能名称取得
#------------------------------------------------------------------------------------------------------------
sub getName
{
	return 'ダイス';
}

#------------------------------------------------------------------------------------------------------------
#	拡張機能説明取得
#------------------------------------------------------------------------------------------------------------
sub getExplanation
{
	return '名前欄か本文中にコマンドを入力することでダイスを振ります。コマンドは「!xDy」(yつ目ダイスをx回)です。';
}

#------------------------------------------------------------------------------------------------------------
#	拡張機能タイプ取得
#------------------------------------------------------------------------------------------------------------
sub getType
{
	return 16;
}

#------------------------------------------------------------------------------------------------------------
#	設定リスト取得 (0ch+ Only)
#------------------------------------------------------------------------------------------------------------
sub getConfig
{
	return {
		'default_max'	=> {
			'default'		=> 6,
			'valuetype'		=> 1,
			'description'	=> '最大目数を省略したときのデフォルト値(0で省略不可)',
		},
		'default_count'	=> {
			'default'		=> 1,
			'valuetype'		=> 1,
			'description'	=> '振る回数を省略したときのデフォルト値(0で省略不可)',
		},
		'max_max'	=> {
			'default'		=> 200,
			'valuetype'		=> 1,
			'description'	=> '最大目数の上限',
		},
		'max_count'	=> {
			'default'		=> 100,
			'valuetype'		=> 1,
			'description'	=> '振る回数の上限',
		},
		'show_detail'	=> {
			'default'		=> 0,
			'valuetype'		=> 3,
			'description'	=> '振って出た目の詳細を表示する(本文中のみ)',
		},
	};
}

#------------------------------------------------------------------------------------------------------------
#	拡張機能実行インタフェイス
#------------------------------------------------------------------------------------------------------------
sub execute
{
	my $this = shift;
	my ($Sys, $Form, $type) = @_;

	# 0ch本家では実行しない
	return 0 if (!$this->{'is0ch+'});

	# 設定を取得
	my $default_max = $this->GetConf('default_max');
	my $default_count = $this->GetConf('default_count');
	my $max_max = $this->GetConf('max_max');
	my $max_count = $this->GetConf('max_count');
	my $show_detail = $this->GetConf('show_detail');

	# 名前欄・本文を取得
	my $name = $Form->Get('FROM');
	my $text = $Form->Get('MESSAGE');

	# 正規表現を準備
	my $re = '!([1-9][0-9]*'.($default_count?'|':'').')D([1-9][0-9]*'.($default_max?'|':'').')';

	# 名前欄のダイスを振る
	$name =~ s{$re}
	          {'</b>【'.Dice($2||$default_max, $1||$default_count, $max_max, $max_count, 0).'】<b>'}eg;

	# 本文中のダイスを振る
	$text =~ s{$re}
	          {'<b>【'.Dice($2||$default_max, $1||$default_count, $max_max, $max_count, $show_detail).'】</b>'}eg;

	# 名前欄・本文を再設定
	$Form->Set('FROM', $name);
	$Form->Set('MESSAGE', $text);

	return 0;
}

sub Dice
{
	my ($max, $count, $max_max, $max_count, $show_detail) = @_;

	$max = int $max;
	$count = int $count;

	if ($max > $max_max) {
		return "${count}D$max:最大目数は$max_maxまで";
	}
	if ($count > $max_count) {
		return "${count}D$max:回数は$max_countまで";
	}

	my $sum = 0;
	my @log = ();

	for (my $i = 0; $i < $count; $i++) {
		my $num = 1 + int rand $max;
		$sum += $num;
		push @log, $num;
	}

	return "${count}D$max:$sum".($show_detail&&$count>1?'('.join('+',@log).')':'');
}



#------------------------------------------------------------------------------------------------------------
#	コンストラクタ
#------------------------------------------------------------------------------------------------------------
sub new
{
	my $class = shift;
	my ($Config) = @_;

	my $this = {};
	bless $this, $class;

	if (defined $Config) {
		$this->{'PLUGINCONF'} = $Config;
		$this->{'is0ch+'} = 1;
	}
	else {
		$this->{'CONFIG'} = $class->getConfig();
		$this->{'is0ch+'} = 0;
	}

	return $this;
}

#------------------------------------------------------------------------------------------------------------
#	設定値取得 (0ch+ Only)
#------------------------------------------------------------------------------------------------------------
sub GetConf
{
	my $this = shift;
	my ($key) = @_;
	if ($this->{'is0ch+'}) {
		return $this->{'PLUGINCONF'}->GetConfig($key);
	}
	elsif (defined $this->{'CONFIG'}->{$key}) {
		return $this->{'CONFIG'}->{$key}->{'default'};
	}
}

#------------------------------------------------------------------------------------------------------------
#	設定値設定 (0ch+ Only)
#------------------------------------------------------------------------------------------------------------
sub SetConf
{
	my $this = shift;
	my ($key, $val) = @_;
	if ($this->{'is0ch+'}) {
		$this->{'PLUGINCONF'}->SetConfig($key, $val);
	}
	elsif (defined $this->{'CONFIG'}->{$key}) {
		$this->{'CONFIG'}->{$key}->{'default'} = $val;
	}
	else {
		$this->{'CONFIG'}->{$key} = { 'default' => $val };
	}
}

#============================================================================================================
#	Module END
#============================================================================================================
1;